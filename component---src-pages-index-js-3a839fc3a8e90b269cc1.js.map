{"version":3,"sources":["webpack:///./src/components/sidebar/Bio.js","webpack:///./src/components/sidebar/SocialLinks.js","webpack:///./src/components/sidebar/Sidebar.js","webpack:///./src/pages/index.js","webpack:///./src/components/tags/TechTag.js"],"names":["Bio","author","tagline","className","src","dominik","alt","SocialLinks","contacts","href","github","title","size","style","color","stackoverflow","twitter","Sidebar","query","render","data","site","siteMetadata","to","labels","map","label","TechTag","key","tag","IndexPage","posts","allMarkdownRemark","edges","nextPage","toString","keywords","post","node","id","fields","slug","frontmatter","date","excerpt","tags","rel","textDecoration","args","useStaticQuery","find","it","icon","tech","name","test","React","createElement","FontAwesome","SimpleIcon","Devicons","fontSize"],"mappings":"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","file":"component---src-pages-index-js-3a839fc3a8e90b269cc1.js","sourcesContent":["import React from \"react\"\nimport \"./sidebar.css\"\n\nimport dominik from \"../../images/dominik.jpg\"\n\nconst Bio = ({ author, tagline }) => {\n\n    return (\n        <div className=\"bio-main w-75\">\n            <img src={dominik} alt=\"Dominik Bauernfeind\" />\n            <h3 className=\"mt-2 author-bio\">{author}</h3>\n            <small className=\"text-muted\">{tagline}</small>\n        </div>\n    )\n}\n\nexport default Bio","import React from \"react\"\nimport {\n    FaGithubSquare,\n    FaStackOverflow,\n    FaTwitterSquare\n} from \"react-icons/fa\"\nimport \"./sidebar.css\"\n\n\nconst SocialLinks = ({ contacts }) => {\n    return (\n        <div className=\"side-social-links float-left mt-3 mb-3\">\n            <a className=\"text-secondary p-2\"\n                href={contacts.github}>\n                <span title=\"GitHub\">\n                    <FaGithubSquare size={26} style={{ color: \"secondary\" }} />\n                </span>\n            </a>\n            <a className=\"text-secondary p-2\"\n                href={contacts.stackoverflow}>\n                <span title=\"Stack Overflow\">\n                    <FaStackOverflow size={26} style={{ color: \"secondary\" }} />\n                </span>\n            </a>\n            <a className=\"text-secondary p-2\"\n                href={contacts.twitter}>\n                <span title=\"Twitter\">\n                    <FaTwitterSquare size={26} style={{ color: \"secondary\" }} />\n                </span>\n            </a>\n        </div>\n    )\n}\n\nexport default SocialLinks","import React from \"react\"\nimport { StaticQuery, graphql, Link } from \"gatsby\"\nimport Bio from \"./Bio\"\nimport \"./sidebar.css\"\n\nimport SocialLinks from \"./SocialLinks\"\nimport TechTag from \"../tags/TechTag\"\n\nconst Sidebar = () => {\n    return (\n        <StaticQuery\n            query={graphql`\n                query SiteBioQuery {\n                    site {\n                        siteMetadata {\n                            title\n                            tagline\n                            author\n                            contacts {\n                                github\n                                stackoverflow\n                                twitter\n                            }\n                            labels {\n                                tag\n                                tech\n                                name \n                                size \n                                color\n                            }\n                        }\n                    }\n                    allMarkdownRemark(\n                        limit: 10\n                        sort: { fields: [frontmatter___date], order: DESC }\n                        filter: { frontmatter: { published: { eq: true } } }\n                    ) {\n                        edges {\n                            node {\n                                frontmatter {\n                                    tags\n                                }\n                            }\n                        }\n                    }\n                }\n            `}\n            render={data => (\n                <>\n                    <div className=\"sidebar-main border-right\">\n                        <Bio author={data.site.siteMetadata.author} tagline={data.site.siteMetadata.tagline} />\n                        <SocialLinks contacts={data.site.siteMetadata.contacts} />\n                        <div className=\"page-links\">\n                            <Link to=\"/\"><span className=\"text-dark d-block py-1\">All Posts</span></Link>\n                            <Link to=\"/til\"><span className=\"text-dark d-block py-1\">Today I Learned (TIL)</span></Link>\n                            <Link to=\"/blog\"><span className=\"text-dark d-block py-1\">Blog</span></Link>\n                        </div>\n                        <div className=\"tech-tags mt-4\">\n                            {data.site.siteMetadata.labels.map(label => <TechTag key={label.tag} tag={label.tag} />)}\n                        </div>\n                    </div>\n                </>\n            )}\n        />\n    )\n}\n\nexport default Sidebar","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport \"./index.css\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Sidebar from \"../components/sidebar/Sidebar\"\nimport TechTag from \"../components/tags/TechTag\"\n\nconst IndexPage = ({ data }) => {\n  const posts = data.allMarkdownRemark.edges\n  const currentPage = 1\n  const nextPage = (currentPage + 1).toString()\n\n  return (\n    <Layout>\n      <SEO\n        title=\"Home\"\n        keywords={[\n          `gatsby`,\n          `javascript`,\n          `react`,\n          `web development`,\n          `blog`,\n          `graphql`,\n        ]}\n      />\n      <div className=\"index-main\">\n        <div className=\"sidebar px-4 py-2\">\n          <Sidebar />\n        </div>\n        <div className=\"post-list-main\">\n          {posts.map(post => (\n            <div key={post.node.id} className=\"container mt-5\">\n              <Link to={post.node.fields.slug} className=\"text-dark\">\n                <h2 className=\"title\">{post.node.frontmatter.title}</h2>\n              </Link>\n              <small className=\"d-block text-info\">\n                <i>Posted on {post.node.frontmatter.date}</i>\n              </small>\n              <p className=\"mt-3 d-inline\">{post.node.frontmatter.excerpt || post.node.excerpt}</p>\n              <Link to={post.node.fields.slug} className=\"text-primary\">\n                <small className=\"d-inline-block ml-3\"> Read full post</small>\n              </Link>\n              <div className=\"d-block\">\n                {post.node.frontmatter.tags.map(tag => <TechTag key={tag} tag={tag} />)}\n              </div>\n            </div>\n          ))}\n          <div className=\"mt-4 text-center\">\n            <Link to={`/${nextPage}`} rel=\"next\" style={{ textDecoration: `none` }}>\n              <span className=\"text-dark\">Next Page â†’</span>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\nquery IndexQuery {\n  allMarkdownRemark(limit: 3, sort: {fields: [frontmatter___date], order: DESC}, filter: { frontmatter: {published: {eq: true}}}) {\n    totalCount\n    edges {\n      node {\n        excerpt(pruneLength: 200)\n        html\n        id\n        frontmatter {\n          title\n          date(formatString: \"MMMM DD, YYYY\")\n          tags\n          excerpt\n        }\n        fields {\n          slug\n        }\n      }\n    }\n  }\n}\n`\n\nexport default IndexPage\n","import React from \"react\"\nimport * as FontAwesome from \"react-icons/fa\"\nimport * as Devicons from \"react-icons/di\"\nimport * as SimpleIcon from \"react-icons/si\"\n\nimport \"./tags.css\"\nimport { graphql, Link, useStaticQuery } from \"gatsby\";\n\nconst TechTag = (args) => {\n    const { tag } = args;\n\n    const data = useStaticQuery(\n        graphql`\n        query AvailableLabels {\n            site {\n            siteMetadata {\n                labels {\n                tag\n                tech\n                name\n                size\n                color\n                }\n            }\n            }\n        }\n        `\n    )\n\n    const label = data.site.siteMetadata.labels.find(it => it.tag === tag)\n    if (!label) return (<></>);\n\n    const { tech, name, size, color } = label;\n\n    let icon;\n    if (/^Fa/.test(name)) icon = React.createElement(FontAwesome[name]);\n    if (/^Si/.test(name)) icon = React.createElement(SimpleIcon[name]);\n    if (/^Di/.test(name)) icon = React.createElement(Devicons[name]);\n\n    return (\n        <div className=\"d-inline-block p-1\">\n            <Link to={`/tags/${tag}/`}>\n                <button\n                    className=\"tech-tag text-white\">\n                    <p className=\"d-inline\">{tech} </p>\n                    <div className=\"d-inline\" style={{ fontSize: size, color: color }}>{icon}</div>\n                </button>\n            </Link>\n\n        </div>\n\n    )\n}\n\nexport default TechTag"],"sourceRoot":""}