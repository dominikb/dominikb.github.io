{"componentChunkName":"component---src-templates-tag-js","path":"/tags/ruby/","result":{"data":{"site":{"siteMetadata":{"title":"Dominik Bauernfeind","author":"Dominik Bauernfeind","labels":[{"tag":"laravel","tech":"Laravel","name":"DiLaravel","size":20,"color":"#ff2c1f"},{"tag":"php","tech":"PHP","name":"DiPhp","size":20,"color":"#8892bf"},{"tag":"gitlab","tech":"Gitlab","name":"FaGitlab","size":20,"color":"#fc6d25"},{"tag":"cicd","tech":"CI/CD","name":"DiTerminal","size":20,"color":null},{"tag":"ruby","tech":"Ruby","name":"DiRuby","size":20,"color":"#aa1401"},{"tag":"rails","tech":"Rails","name":"SiRubyonrails","size":20,"color":"#d30001"},{"tag":"java","tech":"Java","name":"FaJava","size":20,"color":"#df0000"},{"tag":"spring","tech":"Spring","name":"SiSpring","size":20,"color":"#6db33f"},{"tag":"spring-boot","tech":"Spring Boot","name":"SiSpringboot","size":20,"color":"#6db33f"}]}},"allMarkdownRemark":{"totalCount":4,"edges":[{"node":{"excerpt":"","html":"","id":"dce0966b-39b0-5386-984a-26b375adb732","frontmatter":{"title":"Catching exceptions and signal handling","date":"April, 2022","tags":["ruby"],"excerpt":"Spring Shell uses a CommandLineRunner blocking the main thread in order to run the interactive communication with the user. Other CommandLineRunners without any defined @Order or a lower priority,\nwill not be executed before...\n"},"fields":{"slug":"/2022-04-15-ruby-signal-handling/"}}},{"node":{"excerpt":"Once, I wrote some code that read similar to this: As this were just stub-classes they were not used in any test. They pipeline succeeded and deployed the code to a staging environment. This resulted…","html":"<p>Once, I wrote some code that read similar to this:</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token keyword\">module</span> <span class=\"token class-name\">Stub</span>\n  <span class=\"token keyword\">class</span> <span class=\"token class-name\">Applicable</span> <span class=\"token keyword\">end</span>\n\n  <span class=\"token keyword\">class</span> <span class=\"token class-name\">ImmediatelyApplicable</span> <span class=\"token operator\">&lt;</span> Applicable\n  <span class=\"token keyword\">end</span>\n\n  <span class=\"token keyword\">class</span> <span class=\"token class-name\">DelayedApplicable</span> <span class=\"token operator\">&lt;</span> Applicalbe\n  <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span></code></pre></div>\n<p>As this were just stub-classes they were not used in any test. They pipeline succeeded and deployed the code to a staging environment. This resulted in an error and the service was down, albeit working perfectly on my machine! </p>\n<blockquote>\n<p><strong>[2022-03-04T12:34:56+00.00 app[worker.1]: pid=1 tid=2ks]</strong> WARN: NameError: uninitialized constant Stub::Applicalbe</p>\n</blockquote>\n<p>Turns out, I made a typo and wrote <em>Applica<strong>lb</strong>e</em>. *facepalm*</p>\n<p>When in development mode, files are only required when they are needed the first time but when running <code class=\"language-text\">Rails</code> in production mode, it was eager loading all the files.</p>\n<p>Turns out, you can reproduce this locally in your console to re-create the error:</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">$ bin/rails console\nirb(main):001:0&gt; Rails.application.eager_load!</code></pre></div>","id":"6de45c75-752b-5c97-944d-5c7b4b27dded","frontmatter":{"title":"How to eager load files with Rails","date":"March, 2022","tags":["rails","ruby"],"excerpt":"Eager loading increases performance and thus is useful in production environments.\nBut this conditional behaviour can also lead to works-on-my-machine moments.\n"},"fields":{"slug":"/2022-03-04-rails-eager-loading-all-files/"}}},{"node":{"excerpt":"Besides making the collection of objects available through  16 more methods get added to the model automatically.","html":"<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Post</span>\n<span class=\"token keyword\">end</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Author</span> <span class=\"token operator\">&lt;</span> ApplicationRecord\n\thas_many <span class=\"token symbol\">:posts</span>\n<span class=\"token keyword\">end</span></code></pre></div>\n<p>Besides making the collection of objects available through <code class=\"language-text\">author.posts</code> 16 more methods get <a href=\"https://guides.rubyonrails.org/association_basics.html#has-many-association-reference\">added to the model automatically</a>.</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token comment\"># Even when you add a post_ids column to the author model, the value is never persisted ;)</span>\n<span class=\"token comment\"># Only foreign_keys on related models get updated accordingly!</span>\nauthor<span class=\"token punctuation\">.</span>post_ids <span class=\"token operator\">==</span> author<span class=\"token punctuation\">.</span>posts<span class=\"token punctuation\">.</span>map<span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token symbol\">:id</span><span class=\"token punctuation\">)</span></code></pre></div>","id":"9a6ccd72-9384-51ef-a4f5-026b003bb9ff","frontmatter":{"title":"About generated methods for has_many relations","date":"March, 2022","tags":["rails","ruby"],"excerpt":null},"fields":{"slug":"/2022-03-04-rails-models-has-many-relation-ids/"}}},{"node":{"excerpt":"Members of a class are retrieved via sending message to the instance object. This means, accessing a property is the same as invoking a method with the same name. This can be used as a useful…","html":"<p>Members of a class are retrieved via sending message to the instance object. This means, accessing a property is the same as invoking a method with the same name.</p>\n<p>This can be used as a useful shorthand in combination with the <em>method reference operator</em>.</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span>\n  attr_accessor <span class=\"token symbol\">:name</span>\n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">initialize</span></span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n    <span class=\"token variable\">@name</span> <span class=\"token operator\">=</span> name\n  <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span>\n\nauthor <span class=\"token operator\">=</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"dominik\"</span></span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Accessing properties using a dynamic invokation</span>\nauthor<span class=\"token punctuation\">.</span>name <span class=\"token operator\">==</span> author<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token symbol\">:name</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">=></span> <span class=\"token boolean\">true</span>\n\n<span class=\"token comment\"># Mapping over a list of objects to extract one property</span>\npeople <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token class-name\">Person</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"Dominik\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"Albert\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"Frieda\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\npeople<span class=\"token punctuation\">.</span>map <span class=\"token punctuation\">{</span> <span class=\"token operator\">|</span>person<span class=\"token operator\">|</span> person<span class=\"token punctuation\">.</span>name <span class=\"token punctuation\">}</span> <span class=\"token comment\"># or</span>\npeople<span class=\"token punctuation\">.</span>map<span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token symbol\">:name</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span><span class=\"token string-literal\"><span class=\"token string\">\"Dominik\"</span></span><span class=\"token punctuation\">,</span> <span class=\"token string-literal\"><span class=\"token string\">\"Albert\"</span></span><span class=\"token punctuation\">,</span> <span class=\"token string-literal\"><span class=\"token string\">\"Frieda\"</span></span><span class=\"token punctuation\">]</span></code></pre></div>","id":"de188bbe-bc2f-57ba-8920-74fb8cfadc36","frontmatter":{"title":"Ruby class members are methods!","date":"March, 2022","tags":["ruby"],"excerpt":null},"fields":{"slug":"/2022-03-04-rails-class-attributes-as-methods/"}}}]}},"pageContext":{"tag":"ruby"}},"staticQueryHashes":["2212750296","2457483284","3019618709","63159454"]}