{"version":3,"sources":["webpack:///./src/components/sidebar/Bio.js","webpack:///./src/components/sidebar/SocialLinks.js","webpack:///./src/components/sidebar/Sidebar.js","webpack:///./src/components/tags/TechTag.js","webpack:///./src/templates/blog-post.js"],"names":["Bio","author","tagline","className","src","dominik","alt","SocialLinks","contacts","href","github","title","size","style","color","stackoverflow","twitter","Sidebar","query","render","data","site","siteMetadata","to","labels","map","label","TechTag","key","tag","args","useStaticQuery","find","it","icon","tech","name","test","React","createElement","FontAwesome","SimpleIcon","Devicons","fontSize","BlogPost","props","post","markdownRemark","tags","frontmatter","date","dangerouslySetInnerHTML","__html","html"],"mappings":"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","file":"component---src-templates-blog-post-js-3008eae924d18084f310.js","sourcesContent":["import React from \"react\"\nimport \"./sidebar.css\"\n\nimport dominik from \"../../images/dominik.jpg\"\n\nconst Bio = ({ author, tagline }) => {\n\n    return (\n        <div className=\"bio-main w-75\">\n            <img src={dominik} alt=\"Dominik Bauernfeind\" />\n            <h3 className=\"mt-2 author-bio\">{author}</h3>\n            <small className=\"text-muted\">{tagline}</small>\n        </div>\n    )\n}\n\nexport default Bio","import React from \"react\"\nimport {\n    FaGithubSquare,\n    FaStackOverflow,\n    FaTwitterSquare\n} from \"react-icons/fa\"\nimport \"./sidebar.css\"\n\n\nconst SocialLinks = ({ contacts }) => {\n    return (\n        <div className=\"side-social-links float-left mt-3 mb-3\">\n            <a className=\"text-secondary p-2\"\n                href={contacts.github}>\n                <span title=\"GitHub\">\n                    <FaGithubSquare size={26} style={{ color: \"secondary\" }} />\n                </span>\n            </a>\n            <a className=\"text-secondary p-2\"\n                href={contacts.stackoverflow}>\n                <span title=\"Stack Overflow\">\n                    <FaStackOverflow size={26} style={{ color: \"secondary\" }} />\n                </span>\n            </a>\n            <a className=\"text-secondary p-2\"\n                href={contacts.twitter}>\n                <span title=\"Twitter\">\n                    <FaTwitterSquare size={26} style={{ color: \"secondary\" }} />\n                </span>\n            </a>\n        </div>\n    )\n}\n\nexport default SocialLinks","import React from \"react\"\nimport { StaticQuery, graphql, Link } from \"gatsby\"\nimport Bio from \"./Bio\"\nimport \"./sidebar.css\"\n\nimport SocialLinks from \"./SocialLinks\"\nimport TechTag from \"../tags/TechTag\"\n\nconst Sidebar = () => {\n    return (\n        <StaticQuery\n            query={graphql`\n                query SiteBioQuery {\n                    site {\n                        siteMetadata {\n                            title\n                            tagline\n                            author\n                            contacts {\n                                github\n                                stackoverflow\n                                twitter\n                            }\n                            labels {\n                                tag\n                                tech\n                                name \n                                size \n                                color\n                            }\n                        }\n                    }\n                    allMarkdownRemark(\n                        limit: 10\n                        sort: { fields: [frontmatter___date], order: DESC }\n                        filter: { frontmatter: { published: { eq: true } } }\n                    ) {\n                        edges {\n                            node {\n                                frontmatter {\n                                    tags\n                                }\n                            }\n                        }\n                    }\n                }\n            `}\n            render={data => (\n                <>\n                    <div className=\"sidebar-main border-right\">\n                        <Bio author={data.site.siteMetadata.author} tagline={data.site.siteMetadata.tagline} />\n                        <SocialLinks contacts={data.site.siteMetadata.contacts} />\n                        <div className=\"page-links\">\n                            <Link to=\"/\"><span className=\"text-dark d-block py-1\">All Posts</span></Link>\n                            <Link to=\"/til\"><span className=\"text-dark d-block py-1\">Today I Learned (TIL)</span></Link>\n                            <Link to=\"/blog\"><span className=\"text-dark d-block py-1\">Blog</span></Link>\n                        </div>\n                        <div className=\"tech-tags mt-4\">\n                            {data.site.siteMetadata.labels.map(label => <TechTag key={label.tag} tag={label.tag} />)}\n                        </div>\n                    </div>\n                </>\n            )}\n        />\n    )\n}\n\nexport default Sidebar","import React from \"react\"\nimport * as FontAwesome from \"react-icons/fa\"\nimport * as Devicons from \"react-icons/di\"\nimport * as SimpleIcon from \"react-icons/si\"\n\nimport \"./tags.css\"\nimport { graphql, Link, useStaticQuery } from \"gatsby\";\n\nconst TechTag = (args) => {\n    const { tag } = args;\n\n    const data = useStaticQuery(\n        graphql`\n        query AvailableLabels {\n            site {\n            siteMetadata {\n                labels {\n                tag\n                tech\n                name\n                size\n                color\n                }\n            }\n            }\n        }\n        `\n    )\n\n    const label = data.site.siteMetadata.labels.find(it => it.tag === tag)\n    if (!label) return (<></>);\n\n    const { tech, name, size, color } = label;\n\n    let icon;\n    if (/^Fa/.test(name)) icon = React.createElement(FontAwesome[name]);\n    if (/^Si/.test(name)) icon = React.createElement(SimpleIcon[name]);\n    if (/^Di/.test(name)) icon = React.createElement(Devicons[name]);\n\n    return (\n        <div className=\"d-inline-block p-1\">\n            <Link to={`/tags/${tag}/`}>\n                <button\n                    className=\"tech-tag text-white\">\n                    <p className=\"d-inline\">{tech} </p>\n                    <div className=\"d-inline\" style={{ fontSize: size, color: color }}>{icon}</div>\n                </button>\n            </Link>\n\n        </div>\n\n    )\n}\n\nexport default TechTag","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport \"./blog-post.css\"\n\nimport Sidebar from \"../components/sidebar/Sidebar\"\nimport TechTag from \"../components/tags/TechTag\"\n\nconst BlogPost = props => {\n  const post = props.data.markdownRemark\n  const tags = post.frontmatter.tags\n\n  return (\n    <Layout>\n      <SEO title={post.frontmatter.title} />\n      <div className=\"post-page-main\">\n        <div className=\"sidebar px-4 py-2\">\n          <Sidebar />\n        </div>\n\n        <div className=\"post-main\">\n          <SEO title={post.frontmatter.title} />\n          <div className=\"mt-3\">\n            <h1 className=\"heading\">{post.frontmatter.title}</h1>\n            <div className=\"d-block\">\n              {tags.map(tag => <TechTag key={tag} tag={tag} />)}\n            </div>\n            <br />\n            <small>\n              <i>Published on </i> {post.frontmatter.date}\n            </small>\n            <div dangerouslySetInnerHTML={{ __html: post.html }} />\n          </div>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    site {\n      siteMetadata {\n        url\n        title\n        labels {\n          tag\n          tech\n          name\n          size\n          color\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        tags\n      }\n    }\n  }\n`\n\nexport default BlogPost\n"],"sourceRoot":""}